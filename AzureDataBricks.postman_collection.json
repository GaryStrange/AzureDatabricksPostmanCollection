{
	"info": {
		"_postman_id": "21440801-d0ea-4c6d-b110-1baecba78a17",
		"name": "AzureDataBricks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Jobs API",
			"item": [
				{
					"name": "Create Job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"MyJarTesting2\",\r\n\t\"new_cluster\": {\r\n\t\t\"spark_version\": \"4.3.x-scala2.11\",\r\n\t\t\"node_type_id\": \"Standard_F4s_v2\",\r\n\t\t\"enable_elastic_disk\": false,\r\n\t\t\"num_workers\": 2\r\n\t},\r\n\t\"email_notifications\": { \"on_start\": [\r\n                \"{{NotificationEmail}}\"\r\n            ] },\r\n\t\"timeout_seconds\": 3600,\r\n\t\"max_retries\": 1,\r\n\t\"spark_jar_task\": {\r\n\t\t\"jar_uri\": \"a713759e_2b71_4b63_9712_d4834918ceeb-SBTExampleProject.jar\",\r\n\t\t\"main_class_name\": \"Main\",\r\n\t\t\"run_as_repl\": true\r\n\t}\r\n }"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/create",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Jobs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/list",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"job_id\": 6\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/delete",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Job By Id",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/get?job_id=4",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"get"
							],
							"query": [
								{
									"key": "job_id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Job By Id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"job_id\": 4,\r\n\t\"new_settings\": {\r\n\t\t\"name\": \"MyJarTestingV3\",\r\n\t\t\"new_cluster\": {\r\n\t\t\t\"spark_version\": \"4.3.x-scala2.11\",\r\n\t\t\t\"node_type_id\": \"Standard_F4s_v2\",\r\n\t\t\t\"enable_elastic_disk\": false,\r\n\t\t\t\"num_workers\": 2\r\n\t\t},\r\n\t\t\"email_notifications\": { \"on_start\": [\r\n\t                \"{{NotificationEmail}}\"\r\n\t            ] },\r\n\t\t\"timeout_seconds\": 3600,\r\n\t\t\"max_retries\": 1,\r\n\t\t\"spark_jar_task\": {\r\n\t\t\t\"jar_uri\": \"a713759e_2b71_4b63_9712_d4834918ceeb-SBTExampleProject.jar\",\r\n\t\t\t\"main_class_name\": \"Main\",\r\n\t\t\t\"run_as_repl\": true\r\n\t\t}\r\n\t}\r\n }"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/reset",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"reset"
							]
						},
						"description": "Overwrites the settings of a job with the provided settings."
					},
					"response": []
				},
				{
					"name": "Run Now",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"job_id\": 4,\r\n  \"jar_params\": [\"param1\", \"param2\"]\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/run-now",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"run-now"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"run_name\": \"Luv u one time!\",\r\n\t\"new_cluster\": {\r\n\t\t\"spark_version\": \"4.3.x-scala2.11\",\r\n\t\t\"node_type_id\": \"Standard_F4s_v2\",\r\n\t\t\"num_workers\": 2\r\n\t},\r\n\t\"email_notifications\": { \"on_start\": [\r\n                \"{{NotificationEmail}}\"\r\n            ] },\r\n\t\"timeout_seconds\": 3600,\r\n\t\"spark_jar_task\": {\r\n\t\t\"jar_uri\": \"a713759e_2b71_4b63_9712_d4834918ceeb-SBTExampleProject.jar\",\r\n\t\t\"main_class_name\": \"Main\",\r\n\t\t\"run_as_repl\": true\r\n\t}\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/runs/submit",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"runs",
								"submit"
							]
						},
						"description": "Submit a one-time run with the provided settings. This endpoint doesn’t require a Databricks job to be created. You can directly submit your workload. Runs submitted via this endpoint don’t show up in the UI. Once the run is submitted, you can use the jobs/runs/get API to check the run state."
					},
					"response": []
				},
				{
					"name": "List Runs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/runs/list?limit=5&active_only=false",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"runs",
								"list"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "active_only",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Job Run By Id",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/runs/get?run_id=5",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"runs",
								"get"
							],
							"query": [
								{
									"key": "run_id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Export Run Task (notebook only)",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/runs/export?run_id=5&views_to_export=ALL",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"runs",
								"export"
							],
							"query": [
								{
									"key": "run_id",
									"value": "5"
								},
								{
									"key": "views_to_export",
									"value": "ALL"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Run",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"run_id\": 4\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/runs/cancel",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"runs",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Output",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/runs/get-output?run_id=5",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"runs",
								"get-output"
							],
							"query": [
								{
									"key": "run_id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Run Output",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"run_id\": 3\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/jobs/runs/delete",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"jobs",
								"runs",
								"delete"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b2a2ef90-4e3c-4ace-a6e9-c664d45fb667",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "315f7c37-9f62-453e-9a40-1f36119ae4bd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Get Databricks AuthTokens",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/token/list",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"token",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cluster API",
			"item": [
				{
					"name": "List Clusters",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/clusters/list",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"clusters",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Node Types",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/clusters/list-node-types",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"clusters",
								"list-node-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spark Versions",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/clusters/spark-versions",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"clusters",
								"spark-versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "ClusterById",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/clusters/get?cluster_id={{ClusterId}}",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"clusters",
								"get"
							],
							"query": [
								{
									"key": "cluster_id",
									"value": "{{ClusterId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ClusterEventsByClusterId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cluster_id",
									"value": "{{ClusterId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/clusters/events",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"clusters",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Cluster",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cluster_id",
									"value": "{{ClusterId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/clusters/start",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"clusters",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bounce Cluster",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cluster_id",
									"value": "{{ClusterId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/clusters/restart",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"clusters",
								"restart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop Cluster (delete/terminate)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cluster_id",
									"value": "{{ClusterId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/clusters/delete",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"clusters",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DBFS API",
			"item": [
				{
					"name": "List Files in Path",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/dbfs/list?path=/",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"dbfs",
								"list"
							],
							"query": [
								{
									"key": "path",
									"value": "/"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Files in FileStore",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/dbfs/list?path=/FileStore/jars",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"dbfs",
								"list"
							],
							"query": [
								{
									"key": "path",
									"value": "/FileStore/jars"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete File or Directory",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"path\":\"/\",\n\t\"recursive\":false\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/dbfs/delete",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"dbfs",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/dbfs/get-status?path=/",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"dbfs",
								"get-status"
							],
							"query": [
								{
									"key": "path",
									"value": "/"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Make Directory",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"path\":\"/foo/\"\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/dbfs/mkdirs",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"dbfs",
								"mkdirs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Move Directory",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"source_path\":\"/foo/\",\n\t\"destination_path\":\"/FileStore/jars/foo/\"\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/dbfs/move",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"dbfs",
								"move"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Groups API",
			"item": [
				{
					"name": "List Security Groups",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/groups/list",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"groups",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Members of a Security Group",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/groups/list-members?group_name={{securiyGroupName}}",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"groups",
								"list-members"
							],
							"query": [
								{
									"key": "group_name",
									"value": "{{securiyGroupName}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Member to Security Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_name",
									"value": "user@domain.com",
									"type": "text"
								},
								{
									"key": "parent_name",
									"value": "admins",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/groups/add-member",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"groups",
								"add-member"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Security Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "group_name",
									"value": "consumers",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/groups/create",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"groups",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Libraries API",
			"item": [
				{
					"name": "All Cluster Statues",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/libraries/all-cluster-statuses",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"libraries",
								"all-cluster-statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cluster Status",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/libraries/cluster-status?cluster_id={{ClusterId}}",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"libraries",
								"cluster-status"
							],
							"query": [
								{
									"key": "cluster_id",
									"value": "{{ClusterId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Install Library",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cluster_id\": \"{{ClusterId}}\",\r\n  \"libraries\": [\r\n    {\r\n      \"jar\": \"dbfs:/mnt/libraries/library.jar\"\r\n    },\r\n    {\r\n      \"egg\": \"dbfs:/mnt/libraries/library.egg\"\r\n    },\r\n    {\r\n      \"whl\": \"dbfs:/mnt/libraries/mlflow-0.0.1.dev0-py2-none-any.whl\"\r\n    },\r\n    {\r\n      \"whl\": \"dbfs:/mnt/libraries/wheel-libraries.wheelhouse.zip\"\r\n    },\r\n    {\r\n      \"maven\": {\r\n        \"coordinates\": \"org.jsoup:jsoup:1.7.2\",\r\n        \"exclusions\": [\"slf4j:slf4j\"]\r\n      }\r\n    },\r\n    {\r\n      \"pypi\": {\r\n        \"package\": \"simplejson\",\r\n        \"repo\": \"http://my-pypi-mirror.com\"\r\n      }\r\n    },\r\n    {\r\n      \"cran\": {\r\n        \"package\": \"ada\",\r\n        \"repo\": \"http://cran.us.r-project.org\"\r\n      }\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/libraries/install",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"libraries",
								"install"
							]
						}
					},
					"response": []
				},
				{
					"name": "Uninstall Library",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cluster_id\": \"{{ClusterId}}\",\r\n  \"libraries\": [\r\n    {\r\n      \"jar\": \"dbfs:/mnt/libraries/library.jar\"\r\n    },\r\n    {\r\n      \"cran\": \"ada\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/libraries/uninstall",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"libraries",
								"uninstall"
							]
						}
					},
					"response": []
				}
			],
			"description": "The Libraries API allows you to install and uninstall libraries and get the status of libraries on a cluster via the API.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "SCIM API (Preview)",
			"item": [
				{
					"name": "Get Users",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Users",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Id",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Users/4898975118572329",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Users",
								"4898975118572329"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/scim+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"schemas\":[\r\n      \"urn:ietf:params:scim:schemas:core:2.0:User\"\r\n   ],\r\n   \"userName\":\"example@databricks.com\",\r\n   \"groups\":[\r\n      {\r\n         \"value\":\"123456\"\r\n      }\r\n   ],\r\n   \"entitlements\":[\r\n      {\r\n         \"value\":\"allow-cluster-create\"\r\n      }\r\n   ]\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Users",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User by ID (PATCH)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"schemas\":[\r\n      \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\r\n   ],\r\n   \"Operations\":[\r\n      {\r\n         \"op\":\"add\",\r\n         \"path\":\"entitlements\",\r\n         \"value\":[\r\n            {\r\n               \"value\":\"allow-cluster-create\"\r\n            }\r\n         ]\r\n      }\r\n   ]\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Users/8026243065818586",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Users",
								"8026243065818586"
							]
						},
						"description": "Update a user resource with operations on specific attributes, except those that are immutable. The PATCH method is recommended over the PUT method for setting or updating user entitlements.\r\n\r\nRequest parameters follow the standard SCIM 2.0 protocol and depend on the value of the schemas attribute.\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "Update User by ID (PUT)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"schemas\":[\r\n      \"urn:ietf:params:scim:schemas:core:2.0:User\"\r\n   ],\r\n   \"userName\":\"example@databricks.com\",\r\n   \"entitlements\":[\r\n      {\r\n         \"value\":\"allow-cluster-create\"\r\n      }\r\n   ],\r\n   \"groups\":[\r\n      {\r\n         \"value\":\"4308149557659445\"\r\n      }\r\n   ]\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Users/8026243065818586",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Users",
								"8026243065818586"
							]
						},
						"description": "Overwrite the user resource across multiple attributes, except those that are immutable.\r\n\r\nRequest must include the schemas attribute, set to urn:ietf:params:scim:schemas:core:2.0:User.\r\n\r\nNote\r\n\r\nThe PATCH method is recommended over the PUT method for setting or updating user entitlements.\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "Delete User by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Users/8026243065818586",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Users",
								"8026243065818586"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Groups",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Groups Apply Filter",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Groups?filter=displayName+sw+adm",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Groups"
							],
							"query": [
								{
									"key": "filter",
									"value": "displayName+sw+adm"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Group by ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Groups/270049623502135",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Groups",
								"270049623502135"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"schemas\":[\r\n      \"urn:ietf:params:scim:schemas:core:2.0:Group\"\r\n   ],\r\n   \"displayName\":\"newgroup\"\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Groups",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"schemas\":[\r\n      \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\r\n   ],\r\n   \"Operations\":[\r\n      {\r\n         \"op\":\"add\",\r\n         \"value\":{\r\n            \"members\":[\r\n               {\r\n                  \"value\":\"270049623502135\"\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   ]\r\n}"
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Groups/8980268131784531",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Groups",
								"8980268131784531"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group Copy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/scim+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ADBAccountURL}}/api/2.0/preview/scim/v2/Groups/8980268131784531",
							"protocol": "https",
							"host": [
								"{{ADBAccountURL}}"
							],
							"path": [
								"api",
								"2.0",
								"preview",
								"scim",
								"v2",
								"Groups",
								"8980268131784531"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5176c05c-b31d-4252-8511-a22072f5cc2c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "725b876b-a4f1-4a54-b6dd-59cfcef5178c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}